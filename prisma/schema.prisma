generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  privyId       String         @unique
  email         String?        @unique
  name          String?
  walletAddress String?
  isArtist      Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  artistRequest ArtistRequest?
  artworks      Artwork[]
  profile       Profile?
}

model ArtistRequest {
  id              String        @id @default(cuid())
  userId          String        @unique
  firstName       String
  lastName        String
  country         String
  city            String
  dateOfBirth     DateTime
  bio             String        @db.Text
  portfolio       String // Changed from String? to String
  experienceYears Int
  artStyle        String
  socialLinks     String?       @db.Text
  status          RequestStatus @default(PENDING)
  submittedAt     DateTime      @default(now())
  reviewedAt      DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([status])
}

model Artwork {
  id          String   @id @default(cuid())
  title       String
  description String?  @db.Text
  imageUrl    String
  price       Float
  artistId    String
  artist      User     @relation(fields: [artistId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
model Profile {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  displayName   String?
  biography     String?  @db.Text
  avatarUrl     String?
  coverImageUrl String?
  socialLinks   Json?    // Store multiple social links as JSON
  location      String?  // City, Country format or separate fields
  websiteUrl    String?
  isVerified    Boolean  @default(false)
  featured      Boolean  @default(false)
  joinedDate    DateTime @default(now())
  lastActive    DateTime @default(now()) @updatedAt
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@index([userId])
}